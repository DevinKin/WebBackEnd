<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:命名空间,做sql隔离 -->
<mapper namespace="test2">

	<!-- 
	id:sql语句唯一标识
	parameterType:指定传入参数类型
	resultType:返回结果集类型
	#{}占位符:起到占位作用,如果传入的是基本类型(string,long,double,int,boolean,float等),那么#{}中的变量名称可以随意写.
	 -->
	<select id="findUserById" parameterType="int" resultType="cn.devinkin.pojo.User2">
		select * from user where id=#{id}
	</select>

	<!--
	如果返回结果为集合,可以调用selectList方法,这个方法返回的结果是一个集合
	所以映射文件中,返回类型应该配置成集合泛型的类型
	${}拼接符:字符串原样拼接,如果传入的参数是基本类型,那么${}中的变量名称必须是value
	注意:拼接符有sql注入的风险,所以要慎重使用,
	-->
	<select id="findUserByUser2Name" parameterType="int" resultType="cn.devinkin.pojo.User2">
		select * from user where username like '%${value}%'
	</select>

	<!--
	#{}:如果传入的参数是pojo类型,那么${}中的变量名称必须是pojo中对应的属性
	如果要返回数据库自增主键:可以使用 select LAST_INSERT_ID()
	-->
	<insert id="insertUser" parameterType="cn.devinkin.pojo.User2">
		<!-- 执行 LAST_INSERT_ID()数据库函数,返回自增的主键
		keyProperty:将返回的主键放入传入参数的Id中保存.
		order:当前函数相对于insert语句的执行顺序
		resultType:id的类型,也就是keyProperty中属性的类型
		-->
		<selectKey keyProperty="id" order="AFTER" resultType="int">
			select LAST_INSERT_ID();
		</selectKey>
	  	insert into user(username, birthday, sex, address) values (#{username}, #{birthday}, #{sex}, #{address})
	</insert>

	<insert id="insertUser2" parameterType="cn.devinkin.pojo.User2">
		<selectKey keyProperty="id" order="BEFORE" resultType="string">
			select uuid()
		</selectKey>
        insert into user2(id,username, birthday, sex, address) values (#{id}, #{username}, #{birthday}, #{sex}, #{address})
	</insert>


</mapper>